%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$dist/default/debug/LCD_Display.debug.o
cinit CODE 0 7FC 7FC 4 2 1
idloc IDLOC 5 2000 2000 4 2 1
text1 CODE 0 711 711 5 2 1
text2 CODE 0 7B2 7B2 22 2 1
text3 CODE 0 760 760 1A 2 1
text4 CODE 0 746 746 1A 2 1
text5 CODE 0 7D4 7D4 28 2 1
text6 CODE 0 77A 77A 1B 2 1
text7 CODE 0 716 716 16 2 1
text8 CODE 0 72C 72C 1A 2 1
maintext CODE 0 795 795 1D 2 1
cstackCOMMON COMMON 1 70 70 8 1 1
strings STRING 0 3 3 12 2 1
config CONFIG 4 2007 2007 1 2 1
$/tmp/xcXlLaIMB/driver_tmp_12.o
idloc IDLOC 5 2000 2000 4 2 1
end_init CODE 0 0 0 3 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 15-710 2
CONST 800-1FFF 2
ENTRY 15-710 2
ENTRY 800-1FFF 2
CODE 15-710 2
CODE 800-1FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 78-7D 1
EEDATA 2100-21FF 2
STRCODE 15-710 2
STRCODE 800-1FFF 2
STRING 15-710 2
STRING 800-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$dist/default/debug/LCD_Display.debug.o
7FC cinit CODE >398:/tmp/xcXlLaIMB/driver_tmp_1.s
7FC cinit CODE >401:/tmp/xcXlLaIMB/driver_tmp_1.s
7FC cinit CODE >407:/tmp/xcXlLaIMB/driver_tmp_1.s
7FC cinit CODE >409:/tmp/xcXlLaIMB/driver_tmp_1.s
7FD cinit CODE >410:/tmp/xcXlLaIMB/driver_tmp_1.s
72C text8 CODE >25:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
72C text8 CODE >26:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
732 text8 CODE >27:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
734 text8 CODE >28:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
735 text8 CODE >29:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
73E text8 CODE >30:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
744 text8 CODE >31:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
745 text8 CODE >32:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
716 text7 CODE >43:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
717 text7 CODE >44:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
71B text7 CODE >45:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
71C text7 CODE >46:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
725 text7 CODE >47:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
72B text7 CODE >48:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
77A text6 CODE >5:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
77B text6 CODE >7:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
77D text6 CODE >8:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
77E text6 CODE >9:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
782 text6 CODE >8:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
78A text6 CODE >8:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
78E text6 CODE >11:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
794 text6 CODE >12:/opt/microchip/xc8/v2.45/pic/sources/c99/common/strlen.c
7D4 text5 CODE >50:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7D5 text5 CODE >52:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7D8 text5 CODE >53:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7E5 text5 CODE >54:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7E7 text5 CODE >54:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7F3 text5 CODE >54:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7F7 text5 CODE >54:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7FB text5 CODE >55:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
746 text4 CODE >57:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
746 text4 CODE >58:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
74C text4 CODE >59:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
74E text4 CODE >60:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
74F text4 CODE >61:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
758 text4 CODE >62:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
75E text4 CODE >63:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
75F text4 CODE >64:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
760 text3 CODE >66:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
760 text3 CODE >67:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
766 text3 CODE >68:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
768 text3 CODE >69:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
769 text3 CODE >70:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
772 text3 CODE >71:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
778 text3 CODE >72:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
779 text3 CODE >73:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7B2 text2 CODE >75:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7B2 text2 CODE >76:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7B7 text2 CODE >78:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7BA text2 CODE >79:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7BF text2 CODE >80:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7C1 text2 CODE >80:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7CB text2 CODE >80:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7CF text2 CODE >80:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7D3 text2 CODE >81:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
711 text1 CODE >20:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
711 text1 CODE >21:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
714 text1 CODE >22:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
715 text1 CODE >23:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
795 maintext CODE >83:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
795 maintext CODE >84:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
79A maintext CODE >85:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
79F maintext CODE >86:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7A5 maintext CODE >87:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7AE maintext CODE >88:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
7AE maintext CODE >89:/home/ai/Embedded/PIC16F877a/LCD Display/main.c
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 2 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
__Hspace_0 800 0 ABS 0 - -
__Hspace_1 78 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
_home E8C 0 CODE 0 text4 dist/default/debug/LCD_Display.debug.o
_main F2A 0 CODE 0 maintext dist/default/debug/LCD_Display.debug.o
btemp 7E 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
___stack_hi 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
___stack_lo 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
start 0 0 CODE 0 init /tmp/xcXlLaIMB/driver_tmp_12.o
__end_of_lcd_write_char E58 0 CODE 0 text7 dist/default/debug/LCD_Display.debug.o
__Hpowerup 0 0 CODE 0 powerup -
__end_of_lcd_write FF8 0 CODE 0 text5 dist/default/debug/LCD_Display.debug.o
intlevel0 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
intlevel1 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
intlevel2 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
intlevel3 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
intlevel4 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
intlevel5 0 0 ENTRY 0 functab /tmp/xcXlLaIMB/driver_tmp_12.o
wtemp0 7E 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
_lcd_write FA8 0 CODE 0 text5 dist/default/debug/LCD_Display.debug.o
___init_display E58 0 CODE 0 text8 dist/default/debug/LCD_Display.debug.o
__Lmaintext 0 0 ABS 0 maintext -
?_strlen 70 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
___stackhi 0 0 ABS 0 - /tmp/xcXlLaIMB/driver_tmp_12.o
___stacklo 0 0 ABS 0 - /tmp/xcXlLaIMB/driver_tmp_12.o
set_cursor@count 75 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
__end_of___init_display E8C 0 CODE 0 text8 dist/default/debug/LCD_Display.debug.o
start_initialization FF8 0 CODE 0 cinit dist/default/debug/LCD_Display.debug.o
__end_of_shift_cursor_right EF4 0 CODE 0 text3 dist/default/debug/LCD_Display.debug.o
___int_sp 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__end_of_strlen F2A 0 CODE 0 text6 dist/default/debug/LCD_Display.debug.o
__Hidloc 4008 0 IDLOC 5 idloc -
__Hstack 0 0 STACK 2 stack -
__stringbase 10 0 STRING 0 strings dist/default/debug/LCD_Display.debug.o
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 4 config -
_shift_cursor_right EC0 0 CODE 0 text3 dist/default/debug/LCD_Display.debug.o
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit FF8 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 5 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hheap 0 0 HEAP 7 heap -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Lheap 0 0 HEAP 7 heap -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 800 0 ABS 0 - -
__S1 78 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lintentry 0 0 CODE 0 intentry -
__stringtab 6 0 STRING 0 strings dist/default/debug/LCD_Display.debug.o
reset_vec 0 0 CODE 0 reset_vec /tmp/xcXlLaIMB/driver_tmp_12.o
strlen@a 73 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
strlen@s 74 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
__pmaintext F2A 0 CODE 0 maintext dist/default/debug/LCD_Display.debug.o
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 4 config -
_strlen EF4 0 CODE 0 text6 dist/default/debug/LCD_Display.debug.o
__end_of__stringtab 12 0 STRING 0 strings dist/default/debug/LCD_Display.debug.o
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization FF8 0 CODE 0 cinit dist/default/debug/LCD_Display.debug.o
__Hintentry 0 0 CODE 0 intentry -
_set_cursor F64 0 CODE 0 text2 dist/default/debug/LCD_Display.debug.o
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
set_cursor@horizontal_shift 72 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
lcd_write@i 75 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
__ptext1 E22 0 CODE 0 text1 dist/default/debug/LCD_Display.debug.o
__ptext2 F64 0 CODE 0 text2 dist/default/debug/LCD_Display.debug.o
__ptext3 EC0 0 CODE 0 text3 dist/default/debug/LCD_Display.debug.o
__ptext4 E8C 0 CODE 0 text4 dist/default/debug/LCD_Display.debug.o
__ptext5 FA8 0 CODE 0 text5 dist/default/debug/LCD_Display.debug.o
__ptext6 EF4 0 CODE 0 text6 dist/default/debug/LCD_Display.debug.o
__ptext7 E2C 0 CODE 0 text7 dist/default/debug/LCD_Display.debug.o
__ptext8 E58 0 CODE 0 text8 dist/default/debug/LCD_Display.debug.o
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__H__absolute__ 0 0 ABS 0 __absolute__ -
__Lreset_vec 0 0 CODE 0 reset_vec -
lcd_write@data 77 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
___heap_hi 0 0 ABS 0 - /tmp/xcXlLaIMB/driver_tmp_12.o
___heap_lo 0 0 ABS 0 - /tmp/xcXlLaIMB/driver_tmp_12.o
__end_of__initialization FF8 0 CODE 0 cinit dist/default/debug/LCD_Display.debug.o
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__end_of_set_cursor FA8 0 CODE 0 text2 dist/default/debug/LCD_Display.debug.o
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
__Hend_init 6 0 CODE 0 end_init -
__end_of_home EC0 0 CODE 0 text4 dist/default/debug/LCD_Display.debug.o
__end_of_main F64 0 CODE 0 maintext dist/default/debug/LCD_Display.debug.o
_PORTB 6 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
_PORTC 7 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
_TRISB 86 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
_TRISC 87 0 ABS 0 - dist/default/debug/LCD_Display.debug.o
__end_of_setup E2C 0 CODE 0 text1 dist/default/debug/LCD_Display.debug.o
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
lcd_write_char@i 72 0 COMMON 1 cstackCOMMON dist/default/debug/LCD_Display.debug.o
_setup E22 0 CODE 0 text1 dist/default/debug/LCD_Display.debug.o
__initialization FF8 0 CODE 0 cinit dist/default/debug/LCD_Display.debug.o
__pstrings 6 0 STRING 0 strings dist/default/debug/LCD_Display.debug.o
_lcd_write_char E2C 0 CODE 0 text7 dist/default/debug/LCD_Display.debug.o
___int_stack_hi 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
___int_stack_lo 0 0 STACK 2 stack /tmp/xcXlLaIMB/driver_tmp_12.o
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FC FF8 4 2
text1 0 711 E22 5 2
text2 0 7B2 F64 22 2
text3 0 760 EC0 1A 2
text4 0 746 E8C 1A 2
text5 0 7D4 FA8 28 2
text6 0 77A EF4 1B 2
text7 0 716 E2C 16 2
text8 0 72C E58 1A 2
maintext 0 795 F2A 1D 2
cstackCOMMON 1 70 70 8 1
reset_vec 0 0 0 3 2
strings 0 3 6 12 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
